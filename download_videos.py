"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏–∑ Telegram —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ Google Drive.
"""
import os
import json
import asyncio
import tempfile
from pathlib import Path
from datetime import datetime
from telethon import TelegramClient
from telethon.sessions import StringSession
from telethon.tl.types import MessageMediaDocument, MessageMediaPhoto
from dotenv import load_dotenv
from google_drive_uploader import GoogleDriveUploader

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_ID = int(os.getenv('API_ID'))
API_HASH = os.getenv('API_HASH')
SESSION_STRING = os.getenv('SESSION_STRING')

# ID —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã (–±–µ–∑ -100 –ø—Ä–µ—Ñ–∏–∫—Å–∞, –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ –∏–∑ —Å—Å—ã–ª–∫–∏)
CHAT_ID = -1002406265529  # 2406265529 —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º -100
TOPIC_ID = 4  # ID —Ç–æ–ø–∏–∫–∞ –∏–∑ —Å—Å—ã–ª–∫–∏

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Drive
GOOGLE_DRIVE_FOLDER = '–°–æ–±–µ—Å—ã'  # –ò–º—è –ø–∞–ø–∫–∏ –Ω–∞ Google Drive

# –§–∞–π–ª –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
PROGRESS_FILE = 'download_progress.json'


class DownloadProgress:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è."""

    def __init__(self, progress_file: str):
        self.progress_file = progress_file
        self.downloaded_ids = set()
        self.load_progress()

    def load_progress(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑ —Ñ–∞–π–ª–∞."""
        if os.path.exists(self.progress_file):
            try:
                with open(self.progress_file, 'r', encoding='utf-8') as f:
                    data = json.load(f)
                    self.downloaded_ids = set(data.get('downloaded_ids', []))
                    print(f"‚úì –ó–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–æ–≥—Ä–µ—Å—Å: {len(self.downloaded_ids)} —Ñ–∞–π–ª–æ–≤ —É–∂–µ —Å–∫–∞—á–∞–Ω–æ")
            except Exception as e:
                print(f"‚ö† –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {e}")
                self.downloaded_ids = set()
        else:
            print("‚Ñπ –§–∞–π–ª –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å –Ω–∞—á–∞–ª–∞")

    def save_progress(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ —Ñ–∞–π–ª."""
        try:
            with open(self.progress_file, 'w', encoding='utf-8') as f:
                json.dump({
                    'downloaded_ids': list(self.downloaded_ids),
                    'last_update': datetime.now().isoformat()
                }, f, indent=2, ensure_ascii=False)
        except Exception as e:
            print(f"‚ö† –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {e}")

    def is_downloaded(self, message_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –±—ã–ª –ª–∏ —É–∂–µ —Å–∫–∞—á–∞–Ω —Ñ–∞–π–ª."""
        return message_id in self.downloaded_ids

    def mark_downloaded(self, message_id: int):
        """–û—Ç–º–µ—á–∞–µ—Ç —Ñ–∞–π–ª –∫–∞–∫ —Å–∫–∞—á–∞–Ω–Ω—ã–π."""
        self.downloaded_ids.add(message_id)
        self.save_progress()


async def download_videos():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ Google Drive."""

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ —Å —Å–µ—Å—Å–∏–µ–π –∏–∑ —Å—Ç—Ä–æ–∫–∏
    client = TelegramClient(StringSession(SESSION_STRING), API_ID, API_HASH)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    progress = DownloadProgress(PROGRESS_FILE)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Drive
    try:
        drive_uploader = GoogleDriveUploader()
        drive_uploader.set_folder(GOOGLE_DRIVE_FOLDER)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Google Drive: {e}")
        return

    try:
        await client.connect()

        if not await client.is_user_authorized():
            print("‚ùå –û—à–∏–±–∫–∞: —Å–µ—Å—Å–∏—è –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞")
            return

        print("‚úì –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Telegram")

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        try:
            chat = await client.get_entity(CHAT_ID)
            print(f"‚úì –ù–∞–π–¥–µ–Ω —á–∞—Ç: {getattr(chat, 'title', 'Unknown')}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–∞—Ç–∞: {e}")
            return

        print(f"\nüì• –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –≤–∏–¥–µ–æ –≤ —Ç–æ–ø–∏–∫–µ {TOPIC_ID}...")

        video_count = 0
        skipped_count = 0
        downloaded_count = 0

        # –ò—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º –≤ —Ç–æ–ø–∏–∫–µ
        async for message in client.iter_messages(
            CHAT_ID,
            reply_to=TOPIC_ID,  # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —Ç–æ–ø–∏–∫—É
            reverse=True  # –ù–∞—á–∏–Ω–∞–µ–º —Å —Å–∞–º—ã—Ö —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        ):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–∏–¥–µ–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
            if message.video or (message.media and isinstance(message.media, MessageMediaDocument)):
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ
                is_video = False

                if message.video:
                    is_video = True
                elif hasattr(message.media, 'document'):
                    mime_type = message.media.document.mime_type
                    is_video = mime_type and mime_type.startswith('video/')

                if is_video:
                    video_count += 1

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É–∂–µ —Å–∫–∞—á–∞–Ω
                    if progress.is_downloaded(message.id):
                        skipped_count += 1
                        print(f"‚è≠ [{video_count}] –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ (ID: {message.id})")
                        continue

                    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
                    filename = f"video_{message.id}"
                    if message.file and message.file.ext:
                        filename += message.file.ext
                    else:
                        filename += ".mp4"

                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º MIME-—Ç–∏–ø
                    mime_type = 'video/mp4'
                    if message.video:
                        mime_type = message.video.mime_type or 'video/mp4'
                    elif hasattr(message.media, 'document'):
                        mime_type = message.media.document.mime_type or 'video/mp4'

                    # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ Google Drive
                    try:
                        print(f"\nüì• [{video_count}] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ (ID: {message.id})...")
                        print(f"   –î–∞—Ç–∞: {message.date}")
                        file_size_mb = 0
                        if message.file:
                            file_size_mb = message.file.size / (1024*1024)
                            print(f"   –†–∞–∑–º–µ—Ä: {file_size_mb:.2f} MB")

                        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                        with tempfile.NamedTemporaryFile(delete=False, suffix=filename[filename.rfind('.'):]) as temp_file:
                            temp_filepath = temp_file.name

                        try:
                            # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                            await message.download_media(file=temp_filepath)

                            # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ Google Drive
                            drive_uploader.upload_to_folder(
                                filepath=temp_filepath,
                                filename=filename,
                                mime_type=mime_type,
                                file_size_mb=file_size_mb
                            )

                            progress.mark_downloaded(message.id)
                            downloaded_count += 1

                            print(f"‚úì –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ Google Drive")

                        finally:
                            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                            if os.path.exists(temp_filepath):
                                os.remove(temp_filepath)

                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ (ID: {message.id}): {e}")

        print(f"\n{'='*60}")
        print(f"‚úì –ó–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print(f"  –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ: {video_count}")
        print(f"  –ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ Google Drive –≤ —ç—Ç–æ—Ç —Ä–∞–∑: {downloaded_count}")
        print(f"  –ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ –±—ã–ª–∏): {skipped_count}")
        print(f"  –ü–∞–ø–∫–∞ –Ω–∞ Google Drive: {GOOGLE_DRIVE_FOLDER}")
        print(f"{'='*60}")

    except KeyboardInterrupt:
        print("\n\n‚ö† –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        print(f"‚úì –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    finally:
        await client.disconnect()


def main():
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É."""
    print("="*60)
    print("üìπ –ó–∞–≥—Ä—É–∑—á–∏–∫ –≤–∏–¥–µ–æ –∏–∑ Telegram –Ω–∞ Google Drive")
    print("="*60)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if not API_ID or not API_HASH or not SESSION_STRING:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –∑–∞–¥–∞–Ω—ã API_ID, API_HASH –∏–ª–∏ SESSION_STRING")
        print("   –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example")
        return

    # –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    asyncio.run(download_videos())


if __name__ == '__main__':
    main()
